{"version":3,"sources":["../../../../src/cashier/withdraw.es6"],"names":["define","$","liveapi","windows","rv","currencyDialog","_","moment","require","win","win_view","error_handler","console","error","err","growl","message","Withdraw","init","li","click","cached","authorize","then","data","currency","check_currency","_init_win","catch","moveToTop","root","i18n","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","width","height","close","dialog","trigger","remove","open","destroy","unbind","_init_state","offset","top","my","left","at","css","fixFooterPosition","track","module_id","is_unique","state","route","value","empty_fields","validate","clear","debounce","show","menu","choice","verify","token","code","disabled","transfer","account","amount","loginid","local_storage","get","standard","url","iframe_visible","agent","name","agents","commission","residence","instructions","login_details","Cookies","loginids","reduce","a","b","id","routes","update","r","email","type","send","verify_email","notice","back","unlock","cashier","verification_code","startsWith","Error","iframe_loaded","onchanged","find","paymentagent_loginid","withdrawal_commission","amount_with_commission","with_commission","toFixed","confirm_transfer","request","paymentagent_withdraw","submit","req","transfer_between_accounts","account_from","account_to","get_settings","country_code","paymentagent_list","list","payout_currencies","bind"],"mappings":"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","file":"withdraw.js","sourcesContent":["/*\n * Created by amin on July 16, 2016.\n */\n\ndefine(['jquery', 'websockets/binary_websockets', 'windows/windows', 'common/rivetsExtra', 'cashier/currency', 'lodash', 'moment'], function($, liveapi, windows, rv, currencyDialog, _, moment) {\n    require(['text!cashier/withdraw.html']);\n    require(['css!cashier/withdraw.css']);\n\n    let win = null;\n    let win_view = null;\n\n    let error_handler = err => {\n      console.error(err);\n      $.growl.error({ message: err.message });\n    };\n\n    class Withdraw {\n      init = li => {\n        li.click(() => {\n            if(!win) {\n              liveapi.cached.authorize().then(data => {\n                if(!data.authorize.currency) // if currency is not set ask for currency\n                  return currencyDialog.check_currency();\n                return true; // OK\n              })\n              .then(() => require(['text!cashier/withdraw.html'], this._init_win))\n              .catch(error_handler);\n            }\n            else\n              win.moveToTop();\n        });\n      }\n\n      _init_win = root => {\n        root = $(root).i18n();\n        win = windows.createBlankWindow(root, {\n            title: 'Withdraw funds',\n            resizable: true,\n            collapsable: false,\n            minimizable: true,\n            maximizable: true,\n            width: 700,\n            height: 400,\n            'data-authorized': true,\n            close: () => {\n              win.dialog('destroy');\n              win.trigger('dialogclose'); // TODO: figure out why event is not fired.\n              win.remove();\n              win = null;\n            },\n            open: () => { },\n            destroy: () => {\n              win_view && win_view.unbind();\n              win_view = null;\n            }\n        });\n\n        this._init_state(root);\n        win.dialog('open');\n\n        /* update dialog position, this way when dialog is resized it will not move*/\n        var offset = win.dialog('widget').offset();\n        offset.top = 110;\n        win.dialog(\"option\", \"position\", { my: offset.left, at: offset.top });\n        win.dialog('widget').css({\n            left: offset.left + 'px',\n            top: offset.top + 'px'\n        });\n        win.fixFooterPosition();\n        win.track({\n          module_id: 'withdraw',\n          is_unique: true\n        });\n      };\n\n      _init_state = root => {\n        var state = {\n          route: { value: 'menu'},\n          empty_fields: {\n            validate: false,\n            clear: _.debounce(() => ( state.empty_fields.validate = false ), 4000),\n            show: () => {\n              state.empty_fields.validate = true;\n              state.empty_fields.clear();\n            }\n          },\n          menu: {\n            choice: ''\n          },\n          verify: {\n            token: '',\n            code: '',\n            disabled: false,\n          },\n          transfer: {\n            disabled: false,\n            account: '',\n            amount: '',\n            loginid: local_storage.get('authorize').loginid,\n          },\n          standard: {\n            url: '',\n            iframe_visible: false\n          },\n          agent: {\n            disabled: false,\n            loginid: '',\n            name: '',\n            agents: [],\n            commission: '',\n            amount: '',\n            currency: local_storage.get('authorize').currency,\n            residence: '',\n            instructions: '',\n          },\n          login_details: Cookies.loginids().reduce(function(a,b){if(a.id == local_storage.get(\"authorize\").loginid)return a;else return b})\n        };\n        let {route, menu, verify, empty_fields, standard, agent, transfer} = state;\n\n        let routes = { menu : 400, verify: 400, transfer: 400, 'transfer-done': 300, standard: 400, agent: 550, 'agent-confirm': 400, 'agent-done': 300 };\n        route.update = r => {\n          route.value = r;\n          win.dialog('option', 'height', routes[r]);\n        };\n\n        menu.click = choice => { /* choice is 'transfer', 'agent' or 'standard' */\n          menu.choice = choice;\n          route.update(choice !== 'transfer' ? 'verify' : 'transfer');\n          if(choice === 'transfer')\n            return;\n          const email = local_storage.get('authorize').email;\n          const type = choice === 'agent' ? 'paymentagent_withdraw' : 'payment_withdraw';\n          liveapi.send({\n            verify_email: email,\n            type: type\n          })\n          .then(() => $.growl.notice({ message: 'Verification code sent to '.i18n() + email }))\n          .catch(err => {\n            error_handler(err);\n            route.update('menu');\n          });\n        };\n\n        verify.back = () => {\n          verify.token = verify.code = '';\n          route.update('menu');\n        };\n\n        verify.unlock = () => {\n          if(!verify.token) {\n            empty_fields.show();\n            return;\n          }\n\n          if(menu.choice === 'standard') {\n            verify.disabled = true;\n            liveapi.send({\n              cashier: 'withdraw',\n              verification_code: verify.token\n            })\n            .then(data => {\n              if(data.cashier.startsWith('ASK_')) { /* error code */\n                throw new Error(data.cashier);\n              }\n              standard.url = data.cashier;\n              verify.disabled = false;\n              route.update('standard');\n              verify.code = verify.token;\n              verify.token = '';\n            })\n            .catch(err => {\n              verify.disabled = false;\n              error_handler(err);\n            });\n          }\n          else if(menu.choice == 'agent') {\n            verify.code = verify.token;\n            verify.token = '';\n            route.update('agent');\n          }\n        };\n\n        standard.iframe_loaded = () => {\n          if(standard.url)\n            standard.iframe_visible = true;\n        };\n\n        agent.onchanged = () => {\n          if(agent.loginid) {\n            let {withdrawal_commission, name} = agent.agents.find(a => a.paymentagent_loginid == agent.loginid);\n            agent.commission = withdrawal_commission;\n            agent.name = name;\n          }\n          else {\n            agent.commission = '';\n            agent.name = '';\n          }\n        }\n\n        agent.amount_with_commission = () => {\n            var with_commission = (agent.amount || 0)*(100 - agent.commission)/100;\n            return with_commission.toFixed(2);\n        }\n\n        agent.click = () => {\n          if(!agent.loginid) {\n            $.growl.error({message: 'Please select a payment agent'.i18n()});\n            return;\n          }\n          if(!(agent.amount >= 10 && agent.amount <= 2000)) {\n            $.growl.error({message: 'Amount Min: 10 Max: 2000'.i18n()});\n            return;\n          }\n          if(!agent.instructions) {\n            empty_fields.show();\n            return;\n          }\n\n          route.update('agent-confirm');\n        }\n\n        agent.confirm_transfer = () => {\n          var request = {\n            paymentagent_withdraw: 1,\n            paymentagent_loginid: agent.loginid,\n            currency: agent.currency,\n            amount: agent.amount*1,\n            verification_code: verify.code\n          };\n          agent.disabled = true;\n          liveapi.send(request)\n                 .then(data => {\n                   route.update('agent-done')\n                   agent.disabled = false;\n                 })\n                 .catch(err => {\n                    agent.disabled = false;\n                    route.update('menu') // because tokens are one time use.\n                    error_handler(err);\n                 });\n        }\n\n        transfer.submit = () => {\n          if(transfer.account === '' || transfer.amount === '') {\n            empty_fields.show();\n            return;\n          }\n          var req = {\n            transfer_between_accounts: 1,\n            account_from: transfer.loginid,\n            account_to: transfer.account,\n            currency: agent.currency,\n            amount: transfer.amount\n          };\n          transfer.disabled = true;\n          liveapi.send(req)\n            .then(data => {\n              if(data.transfer_between_accounts === 0) {\n                $.growl.error({message: 'Transfering funds between accounts failed'.i18n() });\n                return;\n              }\n              route.update('transfer-done');\n            })\n            .catch(err => {\n              error_handler(err);\n              transfer.disabled = false;\n            });\n        }\n\n        liveapi.send({get_settings: 1})\n               .then(data => {\n                 agent.residence = data.get_settings.country_code;\n                 return liveapi.cached.send({paymentagent_list: agent.residence });\n               })\n               .then(data => {\n                 agent.agents = data.paymentagent_list.list;\n               })\n               .catch(error_handler);\n\n        liveapi.send({payout_currencies: 1})\n            .then(data => {\n                agent.currency = data.payout_currencies[0];\n            }).catch(err => console.error(err));\n\n        win_view = rv.bind(root[0], state);\n      };\n    };\n\n    return new Withdraw();\n});\n"]}